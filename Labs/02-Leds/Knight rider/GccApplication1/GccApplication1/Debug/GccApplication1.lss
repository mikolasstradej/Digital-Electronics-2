
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000280  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000022c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000280  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a5f  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000066f  00000000  00000000  00000d6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000039c  00000000  00000000  000013de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000177c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b0  00000000  00000000  000017a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000480  00000000  00000000  00001b50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001fd0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 14 01 	jmp	0x228	; 0x228 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>         // AVR device-specific IO definitions

int main(void)
{
	// Set pin as output in Data Direction Register...
	DDRB = DDRB | (1<<LED_GREEN1);
  80:	21 9a       	sbi	0x04, 1	; 4
	PORTB = PORTB & ~(1<<LED_GREEN1);
  82:	29 98       	cbi	0x05, 1	; 5
	DDRB = DDRB | (1<<LED_GREEN2);
  84:	22 9a       	sbi	0x04, 2	; 4
	PORTB = PORTB & ~(1<<LED_GREEN2);
  86:	2a 98       	cbi	0x05, 2	; 5
	DDRB = DDRB | (1<<LED_GREEN3);
  88:	23 9a       	sbi	0x04, 3	; 4
	PORTB = PORTB & ~(1<<LED_GREEN3);
  8a:	2b 98       	cbi	0x05, 3	; 5
	DDRB = DDRB | (1<<LED_GREEN4);
  8c:	24 9a       	sbi	0x04, 4	; 4
	PORTB = PORTB & ~(1<<LED_GREEN4);
  8e:	2c 98       	cbi	0x05, 4	; 5
	DDRB = DDRB | (1<<LED_GREEN5);
  90:	25 9a       	sbi	0x04, 5	; 4
	PORTB = PORTB & ~(1<<LED_GREEN5);
  92:	2d 98       	cbi	0x05, 5	; 5

	DDRD = DDRD & ~(1<<BTN); // tady mám nastavený pin s tlaèítkem jako vstupní
  94:	50 98       	cbi	0x0a, 0	; 10
	PORTD = PORTD | (1<<BTN); // toto tu je kvùli tomu abych nemusel pøidìlávat externí pull-up resistor
  96:	58 9a       	sbi	0x0b, 0	; 11
	{

		if (bit_is_clear(PIND, BTN))
		{
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN1);
  98:	52 e0       	ldi	r21, 0x02	; 2
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN1);
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN2);
  9a:	24 e0       	ldi	r18, 0x04	; 4
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN2);
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN3);
  9c:	98 e0       	ldi	r25, 0x08	; 8
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN3);
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN4);
  9e:	80 e1       	ldi	r24, 0x10	; 16
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN4);
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN5);
  a0:	40 e2       	ldi	r20, 0x20	; 32
	PORTD = PORTD | (1<<BTN); // toto tu je kvùli tomu abych nemusel pøidìlávat externí pull-up resistor

	while (1)
	{

		if (bit_is_clear(PIND, BTN))
  a2:	48 99       	sbic	0x09, 0	; 9
  a4:	fe cf       	rjmp	.-4      	; 0xa2 <main+0x22>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a6:	3f ef       	ldi	r19, 0xFF	; 255
  a8:	64 e3       	ldi	r22, 0x34	; 52
  aa:	7c e0       	ldi	r23, 0x0C	; 12
  ac:	31 50       	subi	r19, 0x01	; 1
  ae:	60 40       	sbci	r22, 0x00	; 0
  b0:	70 40       	sbci	r23, 0x00	; 0
  b2:	e1 f7       	brne	.-8      	; 0xac <main+0x2c>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <main+0x36>
  b6:	00 00       	nop
		{
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN1);
  b8:	35 b1       	in	r19, 0x05	; 5
  ba:	35 27       	eor	r19, r21
  bc:	35 b9       	out	0x05, r19	; 5
  be:	3f ef       	ldi	r19, 0xFF	; 255
  c0:	64 e3       	ldi	r22, 0x34	; 52
  c2:	7c e0       	ldi	r23, 0x0C	; 12
  c4:	31 50       	subi	r19, 0x01	; 1
  c6:	60 40       	sbci	r22, 0x00	; 0
  c8:	70 40       	sbci	r23, 0x00	; 0
  ca:	e1 f7       	brne	.-8      	; 0xc4 <main+0x44>
  cc:	00 c0       	rjmp	.+0      	; 0xce <main+0x4e>
  ce:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN1);
  d0:	35 b1       	in	r19, 0x05	; 5
  d2:	35 27       	eor	r19, r21
  d4:	35 b9       	out	0x05, r19	; 5
  d6:	3f ef       	ldi	r19, 0xFF	; 255
  d8:	64 e3       	ldi	r22, 0x34	; 52
  da:	7c e0       	ldi	r23, 0x0C	; 12
  dc:	31 50       	subi	r19, 0x01	; 1
  de:	60 40       	sbci	r22, 0x00	; 0
  e0:	70 40       	sbci	r23, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <main+0x5c>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x66>
  e6:	00 00       	nop
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN2);
  e8:	35 b1       	in	r19, 0x05	; 5
  ea:	32 27       	eor	r19, r18
  ec:	35 b9       	out	0x05, r19	; 5
  ee:	3f ef       	ldi	r19, 0xFF	; 255
  f0:	64 e3       	ldi	r22, 0x34	; 52
  f2:	7c e0       	ldi	r23, 0x0C	; 12
  f4:	31 50       	subi	r19, 0x01	; 1
  f6:	60 40       	sbci	r22, 0x00	; 0
  f8:	70 40       	sbci	r23, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <main+0x74>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x7e>
  fe:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN2);
 100:	35 b1       	in	r19, 0x05	; 5
 102:	32 27       	eor	r19, r18
 104:	35 b9       	out	0x05, r19	; 5
 106:	3f ef       	ldi	r19, 0xFF	; 255
 108:	64 e3       	ldi	r22, 0x34	; 52
 10a:	7c e0       	ldi	r23, 0x0C	; 12
 10c:	31 50       	subi	r19, 0x01	; 1
 10e:	60 40       	sbci	r22, 0x00	; 0
 110:	70 40       	sbci	r23, 0x00	; 0
 112:	e1 f7       	brne	.-8      	; 0x10c <main+0x8c>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x96>
 116:	00 00       	nop
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN3);
 118:	35 b1       	in	r19, 0x05	; 5
 11a:	39 27       	eor	r19, r25
 11c:	35 b9       	out	0x05, r19	; 5
 11e:	3f ef       	ldi	r19, 0xFF	; 255
 120:	64 e3       	ldi	r22, 0x34	; 52
 122:	7c e0       	ldi	r23, 0x0C	; 12
 124:	31 50       	subi	r19, 0x01	; 1
 126:	60 40       	sbci	r22, 0x00	; 0
 128:	70 40       	sbci	r23, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <main+0xa4>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <main+0xae>
 12e:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN3);
 130:	35 b1       	in	r19, 0x05	; 5
 132:	39 27       	eor	r19, r25
 134:	35 b9       	out	0x05, r19	; 5
 136:	3f ef       	ldi	r19, 0xFF	; 255
 138:	64 e3       	ldi	r22, 0x34	; 52
 13a:	7c e0       	ldi	r23, 0x0C	; 12
 13c:	31 50       	subi	r19, 0x01	; 1
 13e:	60 40       	sbci	r22, 0x00	; 0
 140:	70 40       	sbci	r23, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0xbc>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0xc6>
 146:	00 00       	nop
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN4);
 148:	35 b1       	in	r19, 0x05	; 5
 14a:	38 27       	eor	r19, r24
 14c:	35 b9       	out	0x05, r19	; 5
 14e:	3f ef       	ldi	r19, 0xFF	; 255
 150:	64 e3       	ldi	r22, 0x34	; 52
 152:	7c e0       	ldi	r23, 0x0C	; 12
 154:	31 50       	subi	r19, 0x01	; 1
 156:	60 40       	sbci	r22, 0x00	; 0
 158:	70 40       	sbci	r23, 0x00	; 0
 15a:	e1 f7       	brne	.-8      	; 0x154 <main+0xd4>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0xde>
 15e:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN4);
 160:	35 b1       	in	r19, 0x05	; 5
 162:	38 27       	eor	r19, r24
 164:	35 b9       	out	0x05, r19	; 5
 166:	3f ef       	ldi	r19, 0xFF	; 255
 168:	64 e3       	ldi	r22, 0x34	; 52
 16a:	7c e0       	ldi	r23, 0x0C	; 12
 16c:	31 50       	subi	r19, 0x01	; 1
 16e:	60 40       	sbci	r22, 0x00	; 0
 170:	70 40       	sbci	r23, 0x00	; 0
 172:	e1 f7       	brne	.-8      	; 0x16c <main+0xec>
 174:	00 c0       	rjmp	.+0      	; 0x176 <main+0xf6>
 176:	00 00       	nop
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN5);
 178:	35 b1       	in	r19, 0x05	; 5
 17a:	34 27       	eor	r19, r20
 17c:	35 b9       	out	0x05, r19	; 5
 17e:	3f ef       	ldi	r19, 0xFF	; 255
 180:	64 e3       	ldi	r22, 0x34	; 52
 182:	7c e0       	ldi	r23, 0x0C	; 12
 184:	31 50       	subi	r19, 0x01	; 1
 186:	60 40       	sbci	r22, 0x00	; 0
 188:	70 40       	sbci	r23, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <main+0x104>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0x10e>
 18e:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN5);
 190:	35 b1       	in	r19, 0x05	; 5
 192:	34 27       	eor	r19, r20
 194:	35 b9       	out	0x05, r19	; 5
 196:	3f ef       	ldi	r19, 0xFF	; 255
 198:	64 e3       	ldi	r22, 0x34	; 52
 19a:	7c e0       	ldi	r23, 0x0C	; 12
 19c:	31 50       	subi	r19, 0x01	; 1
 19e:	60 40       	sbci	r22, 0x00	; 0
 1a0:	70 40       	sbci	r23, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <main+0x11c>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <main+0x126>
 1a6:	00 00       	nop
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN4);
 1a8:	35 b1       	in	r19, 0x05	; 5
 1aa:	38 27       	eor	r19, r24
 1ac:	35 b9       	out	0x05, r19	; 5
 1ae:	3f ef       	ldi	r19, 0xFF	; 255
 1b0:	64 e3       	ldi	r22, 0x34	; 52
 1b2:	7c e0       	ldi	r23, 0x0C	; 12
 1b4:	31 50       	subi	r19, 0x01	; 1
 1b6:	60 40       	sbci	r22, 0x00	; 0
 1b8:	70 40       	sbci	r23, 0x00	; 0
 1ba:	e1 f7       	brne	.-8      	; 0x1b4 <main+0x134>
 1bc:	00 c0       	rjmp	.+0      	; 0x1be <main+0x13e>
 1be:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN4);
 1c0:	35 b1       	in	r19, 0x05	; 5
 1c2:	38 27       	eor	r19, r24
 1c4:	35 b9       	out	0x05, r19	; 5
 1c6:	3f ef       	ldi	r19, 0xFF	; 255
 1c8:	64 e3       	ldi	r22, 0x34	; 52
 1ca:	7c e0       	ldi	r23, 0x0C	; 12
 1cc:	31 50       	subi	r19, 0x01	; 1
 1ce:	60 40       	sbci	r22, 0x00	; 0
 1d0:	70 40       	sbci	r23, 0x00	; 0
 1d2:	e1 f7       	brne	.-8      	; 0x1cc <main+0x14c>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <main+0x156>
 1d6:	00 00       	nop
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN3);
 1d8:	35 b1       	in	r19, 0x05	; 5
 1da:	39 27       	eor	r19, r25
 1dc:	35 b9       	out	0x05, r19	; 5
 1de:	3f ef       	ldi	r19, 0xFF	; 255
 1e0:	64 e3       	ldi	r22, 0x34	; 52
 1e2:	7c e0       	ldi	r23, 0x0C	; 12
 1e4:	31 50       	subi	r19, 0x01	; 1
 1e6:	60 40       	sbci	r22, 0x00	; 0
 1e8:	70 40       	sbci	r23, 0x00	; 0
 1ea:	e1 f7       	brne	.-8      	; 0x1e4 <main+0x164>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <main+0x16e>
 1ee:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN3);
 1f0:	35 b1       	in	r19, 0x05	; 5
 1f2:	39 27       	eor	r19, r25
 1f4:	35 b9       	out	0x05, r19	; 5
 1f6:	3f ef       	ldi	r19, 0xFF	; 255
 1f8:	64 e3       	ldi	r22, 0x34	; 52
 1fa:	7c e0       	ldi	r23, 0x0C	; 12
 1fc:	31 50       	subi	r19, 0x01	; 1
 1fe:	60 40       	sbci	r22, 0x00	; 0
 200:	70 40       	sbci	r23, 0x00	; 0
 202:	e1 f7       	brne	.-8      	; 0x1fc <main+0x17c>
 204:	00 c0       	rjmp	.+0      	; 0x206 <main+0x186>
 206:	00 00       	nop
			
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN2);
 208:	35 b1       	in	r19, 0x05	; 5
 20a:	32 27       	eor	r19, r18
 20c:	35 b9       	out	0x05, r19	; 5
 20e:	3f ef       	ldi	r19, 0xFF	; 255
 210:	64 e3       	ldi	r22, 0x34	; 52
 212:	7c e0       	ldi	r23, 0x0C	; 12
 214:	31 50       	subi	r19, 0x01	; 1
 216:	60 40       	sbci	r22, 0x00	; 0
 218:	70 40       	sbci	r23, 0x00	; 0
 21a:	e1 f7       	brne	.-8      	; 0x214 <main+0x194>
 21c:	00 c0       	rjmp	.+0      	; 0x21e <main+0x19e>
 21e:	00 00       	nop
			_delay_ms(BLINK_DELAY);
			PORTB = PORTB ^ (1<<LED_GREEN2);
 220:	35 b1       	in	r19, 0x05	; 5
 222:	32 27       	eor	r19, r18
 224:	35 b9       	out	0x05, r19	; 5
 226:	3d cf       	rjmp	.-390    	; 0xa2 <main+0x22>

00000228 <_exit>:
 228:	f8 94       	cli

0000022a <__stop_program>:
 22a:	ff cf       	rjmp	.-2      	; 0x22a <__stop_program>
